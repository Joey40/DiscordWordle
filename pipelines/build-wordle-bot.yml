trigger:
  branches:
    include:
      - main
  paths:
    include:
      - '*'
      - '/bot/*'
      - '/internal/*'
      - 'pipelines/build-wordle-bot.yml'
    exclude:
      - 'pipelines/terraform-infra.yml'
      - 'terraform/*'

pool:
   vmImage: 'ubuntu-latest'

variables:
  - name: goVersion
    value: 1.19
  - name: serviceConnection
    value: WordleBot
  - name: webApp
    value: WordleBotApp
  - name: buildOutput
    value: $(System.DefaultWorkingDirectory)/buildOutput/Build.go
  - name: buildPackage
    value: $(System.DefaultWorkingDirectory)/buildOutput/Build-$(Build.BuildNumber).zip

steps: 
- task: GoTool@0
  displayName: Install Go
  inputs:
    version: ${{ variables.goVersion }}
    
- task: Go@0
  displayName: Go Get
  inputs:
    command: 'get'
    arguments: '-d'
    workingDirectory: '$(System.DefaultWorkingDirectory)/cmd/bot'
 
- task: Go@0
  displayName: Go Build
  inputs:
    command: 'build'
    workingDirectory: '$(System.DefaultWorkingDirectory)/cmd/bot'
    arguments: '-o "${{ variables.buildOutput }}"'

#- task: Go@0
#  displayName: Go Test
#  inputs:
#    command: 'test'
#    arguments: '-v'
#    workingDirectory: '$(System.DefaultWorkingDirectory)/cmd/bot'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '${{ variables.buildOutput }}'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '${{ variables.buildPackage }}'
    replaceExistingArchive: true

- task: CopyFiles@2
  inputs:
    TargetFolder: '$(System.DefaultWorkingDirectory)/cmd/bot'
    
- task: PublishBuildArtifacts@1
  inputs:
     artifactName: WordleBot

- task: Bash@3
  displayName: ls
  inputs:
   workingDirectory: '${{ variables.buildOutput }}'
   targetType: 'inline'
   script: |
     ls
     
#- task: AzureRmWebAppDeployment@4
#  inputs:
#    ConnectionType: 'AzureRM' # 'AzureRM' | 'PublishProfile'. Required. Connection type. Default: AzureRM.
#    azureSubscription: ${{ variables.serviceConnection }}
#    appType: 'webAppLinux'
#    WebAppName: ${{ variables.webApp }}
#    RuntimeStack: "GO|1.19"
#    packageForLinux: ${{ variables.buildPackage }}
    
- task: AzureWebApp@1
  displayName: Publish App
  inputs:
    azureSubscription: ${{ variables.serviceConnection }}
    appType: 'webAppLinux'
    appName: ${{ variables.webApp }}
    package: ${{ variables.buildPackage }}
